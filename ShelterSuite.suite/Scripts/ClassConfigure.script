//These handlers will set the system into a given state.

to MuteMedia
	Log "Muting Media."
	run ClassNavigate.OpenApp(Settings)
	run ClassNavigate.SettingsOption(Sound)
	wait 1 second
	Click (Text:"Volumes")
	wait 1 second
	Drag (420,300)
	Drop (135,300)
	Click (Text:"OK")
	wait 1 second
	Click "Device/System/HomeButton"
end MuteMedia

to UnMuteMedia
	Log "Unmuting Media."
	run ClassNavigate.OpenApp(Settings)
	run ClassNavigate.SettingsOption(Sound)
	Click (Text:"Volumes")
	wait 1 second
	Drag (140,300)
	Drop (430,300)
	Click (Text:"OK")
	wait 1 second
	Click "Device/System/HomeButton"
end UnMuteMedia

to MuteNotifications
	Log "Muting notifications."
	run ClassNavigate.OpenApp(Settings)
	run ClassNavigate.SettingsOption(Sound)
	Click (Text:"Volumes")
	wait 1 second
	Drag (420,450)
	Drop (125,450)
	Click (Text:"OK")
	wait 1 second
	Click "Device/System/HomeButton"
end MuteNotifications

to UnMuteNotifications
	Log "Unmuting notifications."
	run ClassNavigate.OpenApp(Settings)
	run ClassNavigate.SettingsOption(Sound)
	Click (Text:"Volumes")
	wait 1 second
	Drag (125,450)
	Drop (420,450)
	Click (Text:"OK")
	wait 1 second
	Click "Device/System/HomeButton"
end UnMuteNotifications

to SetBrowserHomepageToDefault
	Log "Setting browser homepage to default."
	Click "Device/System/MenuButton"
	wait 1 second
	Click (Text:"Settings")
	Click (Text:"General")
	wait 1 second
	Click (Text:"Set homepage")
	wait 1 second
	Click (Text:"Default")
	wait 1 second
	Click "Device/System/BackIcon"
	Click "Device/System/BackIcon"
	wait 2 seconds
	Click "Device/System/MenuButton"
	wait 1 second
	Click (Text:"Find on page")
	wait 1 second
	Click "Device/System/BackIcon"
	Click "Device/System/BackIcon"
	wait 2 second
	run ClassUtilities.ConfirmTextOnScreen("google.com") //google is default
	Click "Device/System/HomeButton"
	Click "Device/Apps/Browser/BrowserIcon"
	wait 2 seconds
end SetBrowserHomepageToDefault

to CloseAllBrowserTabs
	Log "Closing all browser tabs."
	wait 2 seconds
	Click "Device/System/MenuButton"
	wait 2 seconds
	Click (Text:"Find on page")
	wait 1 second
	Click "Device/System/BackIcon"
	Click "Device/System/BackIcon"
	Click "Device/Apps/Browser/TabsButton"
	wait 2 second
	repeat until ImageFound("Device/Apps/Browser/DeleteTab") is "false"
		if ImageFound("Device/Apps/Browser/DeleteTab") then
			Log "Deleting browser tab."
			Click "Device/Apps/Browser/DeleteTab"
			wait 1 second
		end if
	end repeat		
	Click "Device/Apps/Browser/BrowserIcon"
	wait 2 seconds
end CloseAllBrowserTabs

to DeleteContact name
	Log "Deleting contact."
	repeat until ImageFound(Text:name) is "false"
		if ImageFound(Text:name) then
			Click (Text:name)
			Click "Device/System/MenuButton"
			Click (Text:"Delete")
			run ClassUtilities.ConfirmTextInArea("contact will"),("10,325"),("450,425")
			run ClassUtilities.ConfirmTextInArea("be deleted"),("10,325"),("450,425")
			Click (Text:"OK")
		end if
	end repeat
	wait 3 seconds
end DeleteContact

to UninstallApp name
	Log "Uninstalling " &name& " app, if present."
	run ClassNavigate.OpenApp(Settings)
	run ClassNavigate.SettingsOption(Apps)
	if ImageFound(Text:name) then
		Log "App present.  Uninstalling..."
		Click (Text:name)
		Click (Text:"Uninstall")
		wait 1 second
		Click (Text:"OK")
		run ClassUtilities.ConfirmTextOnScreen("Uninstall finished")
		Click (Text:"OK")
		run ClassUtilities.ConfirmTextNotOnScreen(name)
	end if
	Click "Device/System/HomeButton"
	run ClassUtilities.ConfirmImageOnScreen("Device/System/AppsIcon")
end UninstallApp

to ResetCalendar event
	Log "Resetting calendar to default page."
	run ClassNavigate.OpenApp(Calendar)
	if ImageFound(3, "Device/Apps/Calendar/ReturnToCalendar") then
		Click "Device/Apps/Calendar/ReturnToCalendar"
	end if
	wait 2 seconds
	if ImageFound(3, "Device/Apps/Calendar/CancelX") then
		Click "Device/Apps/Calendar/CancelX"
	end if
	wait 2 seconds
	run ClassUtilities.ConfirmImageOnScreen("Device/Apps/Calendar/ViewOptions")
	if ImageFound(3, "Device/Apps/Calendar/ViewOptions") then
		Click "Device/Apps/Calendar/ViewOptions"
		Click (Text:"Week")
	end if
	run ClassUtilities.ConfirmTextOnScreen("SUN")
	run ClassUtilities.ConfirmTextOnScreen("WED")
	run ClassUtilities.ConfirmTextOnScreen("SAT")
	Log "Scanning for rogue events."
	ScrollWheelUp 5
	wait 1 second
	if ImageFound(3, Text:event) then
		Click (Text:event)
		wait 1 second
		Click "Device/AppIcons/TrashcanIcon"
		wait 1 second
		Click (Text:"OK")
		wait 1 second
	end if
	repeat 3 times
		ScrollWheelDown 1
		wait 1 second
		if ImageFound(3, Text:event) then
			Click (Text:event)
			wait 1 second
			Click "Device/AppIcons/TrashcanIcon"
			wait 1 second
			Click (Text:"OK")
			wait 1 second
		end if
	end repeat
	Click "Device/System/HomeButton"
	run ClassUtilities.ConfirmImageOnScreen("Device/System/AppsIcon")
	wait 3 seconds
	Log "Calendar has been reset."
end ResetCalendar

to ResetAlarms
	Log "Resetting alarms to blank state."
	run ClassNavigate.OpenApp(Clock)
	Click (Text:"Set alarm")
	wait 1 second
	Log "De-activating any active alarms."
	repeat until ImageFound("Device/Apps/Settings/CheckboxSelected") is "false"
		if ImageFound("Device/Apps/Settings/CheckboxSelected") 
			Click "Device/Apps/Settings/CheckboxSelected"
			wait 1 second
		end if
	end repeat
	wait 1 second
	Log "Deleting any present alarms."
	repeat until ImageFound("Device/Apps/Settings/CheckboxUnselected") is "false"
		if ImageFound("Device/Apps/Settings/CheckboxUnselected") 
			Click "Device/Apps/Settings/CheckboxUnselectedClickRight"
			wait 1 second
			Click "Device/AppIcons/TrashcanIcon"
			wait 1 second
			Click (Text:"OK")
			wait 1 second
		end if
	end repeat
	Log "Returning to main screen."
	Click (Text:"Alarms")
	run ClassUtilities.ConfirmTextOnScreen("Set alarm")
	Click "Device/System/HomeButton"
end ResetAlarms

to Set2GNetwork value
	if value = "On"
		if(ImageFound(3, "Device/Apps/Settings/2GnetworksHighlighted")) = "true"
			wait 2 seconds
			run ClassUtilities.ConfirmImageOnScreen("Device/Apps/Settings/2GnetworksHighlighted")
			Log "2G networks only - setting is on."
		else
			Click (Text:"2G networks")
			wait 1 second
			run ClassUtilities.ConfirmImageOnScreen("Device/Apps/Settings/2GnetworksHighlighted")
			Log "2G networks only - setting is on."
		end if
	end if 
	if value = "Off"
		if(ImageFound(3, "Device/Apps/Settings/2GnetworksHighlighted")) = "true"
			Click (Text:"2G networks")
			wait 1 second
			run ClassUtilities.ConfirmImageNotOnScreen("Device/Apps/Settings/2GnetworksHighlighted")
			Log "2G networks only - setting is off."
		else
			wait 2 seconds
			Log "2G networks only - setting is off."
		end if
	end if	
end Set2GNetwork

to SetVibrateWhenRinging value
	if value = "On"
		if(ImageFound(3, "Device/Apps/Settings/VibrateWhenRingingHighlighted")) = "true"
			wait 2 seconds
			run ClassUtilities.ConfirmImageOnScreen("Device/Apps/Settings/VibrateWhenRingingHighlighted")
			Log "Vibrate when ringing - setting is already on."
		else
			Click (Text:"Vibrate when")
			wait 1 second
			run ClassUtilities.ConfirmImageOnScreen("Device/Apps/Settings/VibrateWhenRingingHighlighted")
			Log "Vibrate when ringing - setting is now on."
		end if
	end if 
	if value = "Off"
		if(ImageFound(3, "Device/Apps/Settings/VibrateWhenRingingHighlighted")) = "true"
			Click (Text:"Vibrate when")
			wait 1 second
			run ClassUtilities.ConfirmImageNotOnScreen("Device/Apps/Settings/VibrateWhenRingingHighlighted")
			Log "Vibrate when ringing - setting is now off."
		else
			wait 2 seconds
			Log "Vibrate when ringing - setting is already off."
		end if
	end if	
end SetVibrateWhenRinging

to ResetEmail
	Log "Resetting email app to inbox."
	wait 1 second
	repeat until ImageFound("Device/Apps/Email/EmailBackButton") is "false"
		if ImageFound("Device/Apps/Email/EmailBackButton") 
			Click "Device/Apps/Email/EmailBackButton"
			wait 1 second
		end if
	end repeat
	run ClassUtilities.ConfirmTextOnScreen("Inbox")
end ResetEmail

to ResetWifiToDefault
	Click (Text:"Wi-Fi")
	Log "Resetting Wifi."
	repeat until (ImageFound(Text:"Connected", SearchRectangle:((10,100),(470,210)))) = "false"
		if(ImageFound(Text:"Connected", SearchRectangle:((10,100),(470,210)))) = "true"
			wait 1 second
			Click (Text:"Connected")
			wait 1 second
			Click (Text:"Forget")
			wait 2 seconds
		end if
	end repeat
	Log "Connecting to default wifi network."
	repeat until (ImageFound("Device/Apps/Settings/WifiDefaultNetwork")) = "false"
		Click "Device/Apps/Settings/WifiDefaultNetwork"
		wait 2 seconds
	end repeat
	run ClassUtilities.ConfirmTextOnScreen("Signal strength")
	run ClassUtilities.ConfirmTextOnScreen("Password")
	run ClassScriptConfig.AccessDefaultWifiSettings
	TypeText universal defaultwifipassword //default password is stored in ClassScriptConfig script
	wait 1 second
	Click (Text:"Connect")
	wait 5 seconds
	run ClassUtilities.ConfirmTextInArea("ProtoTest_MOBILE"),("10,100"),("470,210")
	run ClassUtilities.ConfirmTextInArea("Connected"),("10,100"),("470,210")
	Log "Wifi is set to default."
	wait 1 second
	Click "Device/System/Backicon"
end ResetWifiToDefault

to ForgetAllWifiConnections
	Log "Forgetting all Wifi connections."
	repeat until (ImageFound(Text:"Connected", SearchRectangle:((10,100),(470,210)))) = "false"
		if(ImageFound(Text:"Connected", SearchRectangle:((10,100),(470,210)))) = "true"
			wait 1 second
			Click (Text:"Connected")
			wait 1 second
			Click (Text:"Forget")
			wait 2 seconds
		end if
	end repeat
	Log "All Wifi connections cleared."
end ForgetAllWifiConnections

to DeleteBluetoothPairs
	Log "Deleting Bluetooth pairs."
	repeat until ImageFound("Device/Apps/Settings/MoreSettingsIcon") = "false"
		Click "Device/Apps/Settings/MoreSettingsIcon"
		wait 1 second
		Click (Text:"Unpair")
		WaitFor 60, Text:"SEARCH FOR DEVICES"
	end repeat
	Log "Bluetooth pairs cleared."
end DeleteBluetoothPairs